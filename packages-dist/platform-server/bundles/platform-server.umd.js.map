{"version":3,"file":"platform-server.umd.js","sources":["../../../../packages/platform-server/src/version.ts","../../../../packages/platform-server/src/utils.ts","../../../../packages/platform-server/src/server.ts","../../../../packages/platform-server/src/styles_host.ts","../../../../packages/platform-server/src/server_renderer.ts","../../../../packages/platform-server/src/parse5_adapter.ts","../../../../packages/platform-server/src/location.ts","../../../../packages/platform-server/src/tokens.ts","../../../../packages/platform-server/src/http.ts","../../../../packages/platform-server/src/platform_state.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\n\nimport {Version} from '@angular/core';\n/**\n * \\@stable\n */\nexport const VERSION = new Version('4.0.0-rc.4-b7212f5');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ApplicationRef, NgModuleFactory, NgModuleRef, PlatformRef, Provider, Type} from '@angular/core';\nimport {ɵTRANSITION_ID} from '@angular/platform-browser';\nimport {filter} from 'rxjs/operator/filter';\nimport {first} from 'rxjs/operator/first';\nimport {toPromise} from 'rxjs/operator/toPromise';\n\nimport {PlatformState} from './platform_state';\nimport {platformDynamicServer, platformServer} from './server';\nimport {INITIAL_CONFIG} from './tokens';\n\nconst /** @type {?} */ parse5 = require('parse5');\n\nexport interface PlatformOptions {\n  document?: string;\n  url?: string;\n  extraProviders?: Provider[];\n}\n/**\n * @param {?} platformFactory\n * @param {?} options\n * @return {?}\n */\nfunction _getPlatform(\n    platformFactory: (extraProviders: Provider[]) => PlatformRef,\n    options: PlatformOptions): PlatformRef {\n  const /** @type {?} */ extraProviders = options.extraProviders ? options.extraProviders : [];\n  return platformFactory([\n    {provide: INITIAL_CONFIG, useValue: {document: options.document, url: options.url}},\n    extraProviders\n  ]);\n}\n/**\n * @template T\n * @param {?} platform\n * @param {?} moduleRefPromise\n * @return {?}\n */\nfunction _render<T>(\n    platform: PlatformRef, moduleRefPromise: Promise<NgModuleRef<T>>): Promise<string> {\n  return moduleRefPromise.then((moduleRef) => {\n    const /** @type {?} */ transitionId = moduleRef.injector.get(ɵTRANSITION_ID, null);\n    if (!transitionId) {\n      throw new Error(\n          `renderModule[Factory]() requires the use of BrowserModule.withServerTransition() to ensure\nthe server-rendered app can be properly bootstrapped into a client app.`);\n    }\n    const /** @type {?} */ applicationRef: ApplicationRef = moduleRef.injector.get(ApplicationRef);\n    return toPromise\n        .call(first.call(filter.call(applicationRef.isStable, (isStable: boolean) => isStable)))\n        .then(() => {\n          const /** @type {?} */ output = platform.injector.get(PlatformState).renderToString();\n          platform.destroy();\n          return output;\n        });\n  });\n}\n/**\n * Renders a Module to string.\n * \n * Do not use this in a production server environment. Use pre-compiled {\\@link NgModuleFactory} with\n * {link renderModuleFactory} instead.\n * \n * \\@experimental\n * @template T\n * @param {?} module\n * @param {?} options\n * @return {?}\n */\nexport function renderModule<T>(module: Type<T>, options: PlatformOptions): Promise<string> {\n  const /** @type {?} */ platform = _getPlatform(platformDynamicServer, options);\n  return _render(platform, platform.bootstrapModule(module));\n}\n/**\n * Renders a {\\@link NgModuleFactory} to string.\n * \n * \\@experimental\n * @template T\n * @param {?} moduleFactory\n * @param {?} options\n * @return {?}\n */\nexport function renderModuleFactory<T>(\n    moduleFactory: NgModuleFactory<T>, options: PlatformOptions): Promise<string> {\n  const /** @type {?} */ platform = _getPlatform(platformServer, options);\n  return _render(platform, platform.bootstrapModuleFactory(moduleFactory));\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {PlatformLocation, ɵPLATFORM_SERVER_ID as PLATFORM_SERVER_ID} from '@angular/common';\nimport {platformCoreDynamic} from '@angular/compiler';\nimport {Injectable, InjectionToken, Injector, NgModule, PLATFORM_ID, PLATFORM_INITIALIZER, PlatformRef, Provider, RendererFactory2, RootRenderer, Testability, createPlatformFactory, isDevMode, platformCore, ɵALLOW_MULTIPLE_PLATFORMS as ALLOW_MULTIPLE_PLATFORMS} from '@angular/core';\nimport {HttpModule} from '@angular/http';\nimport {BrowserModule, DOCUMENT, ɵSharedStylesHost as SharedStylesHost, ɵgetDOM as getDOM} from '@angular/platform-browser';\n\nimport {SERVER_HTTP_PROVIDERS} from './http';\nimport {ServerPlatformLocation} from './location';\nimport {Parse5DomAdapter, parseDocument} from './parse5_adapter';\nimport {PlatformState} from './platform_state';\nimport {ServerRendererFactory2} from './server_renderer';\nimport {ServerStylesHost} from './styles_host';\nimport {INITIAL_CONFIG, PlatformConfig} from './tokens';\n/**\n * @param {?} feature\n * @return {?}\n */\nfunction notSupported(feature: string): Error {\n  throw new Error(`platform-server does not support '${feature}'.`);\n}\n\nexport const /** @type {?} */ INTERNAL_SERVER_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  {provide: DOCUMENT, useFactory: _document, deps: [Injector]},\n  {provide: PLATFORM_ID, useValue: PLATFORM_SERVER_ID},\n  {provide: PLATFORM_INITIALIZER, useFactory: initParse5Adapter, multi: true, deps: [Injector]},\n  {provide: PlatformLocation, useClass: ServerPlatformLocation}, PlatformState,\n  // Add special provider that allows multiple instances of platformServer* to be created.\n  {provide: ALLOW_MULTIPLE_PLATFORMS, useValue: true}\n];\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction initParse5Adapter(injector: Injector) {\n  return () => { Parse5DomAdapter.makeCurrent(); };\n}\n\nexport const /** @type {?} */ SERVER_RENDER_PROVIDERS: Provider[] = [\n  ServerRendererFactory2,\n  {provide: RendererFactory2, useExisting: ServerRendererFactory2},\n  ServerStylesHost,\n  {provide: SharedStylesHost, useExisting: ServerStylesHost},\n];\n/**\n * The ng module for the server.\n * \n * \\@experimental\n */\nexport class ServerModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [BrowserModule],\n  imports: [HttpModule],\n  providers: [\n    SERVER_RENDER_PROVIDERS,\n    SERVER_HTTP_PROVIDERS,\n    {provide: Testability, useValue: null},\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ServerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nServerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nServerModule.ctorParameters;\n}\n\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction _document(injector: Injector) {\n  let /** @type {?} */ config: PlatformConfig|null = injector.get(INITIAL_CONFIG, null);\n  if (config && config.document) {\n    return parseDocument(config.document);\n  } else {\n    return getDOM().createHtmlDocument();\n  }\n}\n/**\n * \\@experimental\n */\nexport const platformServer =\n    createPlatformFactory(platformCore, 'server', INTERNAL_SERVER_PLATFORM_PROVIDERS);\n/**\n * The server platform that supports the runtime compiler.\n * \n * \\@experimental\n */\nexport const platformDynamicServer =\n    createPlatformFactory(platformCoreDynamic, 'serverDynamic', INTERNAL_SERVER_PLATFORM_PROVIDERS);\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ApplicationRef, Inject, Injectable, Optional} from '@angular/core';\nimport {DOCUMENT, ɵSharedStylesHost as SharedStylesHost, ɵTRANSITION_ID, ɵgetDOM as getDOM} from '@angular/platform-browser';\n\nimport {Parse5DomAdapter} from './parse5_adapter';\nexport class ServerStylesHost extends SharedStylesHost {\nprivate head: any = null;\n/**\n * @param {?} doc\n * @param {?} transitionId\n */\nconstructor(\nprivate doc: any,\nprivate transitionId: string) {\n    super();\n    this.head = getDOM().getElementsByTagName(doc, 'head')[0];\n  }\n/**\n * @param {?} style\n * @return {?}\n */\nprivate _addStyle(style: string): void {\n    let /** @type {?} */ adapter: Parse5DomAdapter = /** @type {?} */(( getDOM() as Parse5DomAdapter));\n    const /** @type {?} */ el = adapter.createElement('style');\n    adapter.setText(el, style);\n    if (!!this.transitionId) {\n      adapter.setAttribute(el, 'ng-transition', this.transitionId);\n    }\n    adapter.appendChild(this.head, el);\n  }\n/**\n * @param {?} additions\n * @return {?}\n */\nonStylesAdded(additions: Set<string>) { additions.forEach(style => this._addStyle(style)); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ɵTRANSITION_ID, ] }, ]},\n];\n}\n\nfunction ServerStylesHost_tsickle_Closure_declarations() {\n/** @type {?} */\nServerStylesHost.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nServerStylesHost.ctorParameters;\n/** @type {?} */\nServerStylesHost.prototype.head;\n/** @type {?} */\nServerStylesHost.prototype.doc;\n/** @type {?} */\nServerStylesHost.prototype.transitionId;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {DomElementSchemaRegistry} from '@angular/compiler';\nimport {APP_ID, Inject, Injectable, NgZone, RenderComponentType, Renderer, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2, RootRenderer, ViewEncapsulation, ɵstringify as stringify} from '@angular/core';\nimport {DOCUMENT, ɵNAMESPACE_URIS as NAMESPACE_URIS, ɵSharedStylesHost as SharedStylesHost, ɵflattenStyles as flattenStyles, ɵgetDOM as getDOM, ɵshimContentAttribute as shimContentAttribute, ɵshimHostAttribute as shimHostAttribute} from '@angular/platform-browser';\n\nconst /** @type {?} */ EMPTY_ARRAY: any[] = [];\nexport class ServerRendererFactory2 implements RendererFactory2 {\nprivate rendererByCompId = new Map<string, Renderer2>();\nprivate defaultRenderer: Renderer2;\nprivate schema = new DomElementSchemaRegistry();\n/**\n * @param {?} ngZone\n * @param {?} document\n * @param {?} sharedStylesHost\n */\nconstructor(\nprivate ngZone: NgZone,\nprivate document: any,\nprivate sharedStylesHost: SharedStylesHost) {\n    this.defaultRenderer = new DefaultServerRenderer2(document, ngZone, this.schema);\n  };\n/**\n * @param {?} element\n * @param {?} type\n * @return {?}\n */\ncreateRenderer(element: any, type: RendererType2): Renderer2 {\n    if (!element || !type) {\n      return this.defaultRenderer;\n    }\n    switch (type.encapsulation) {\n      case ViewEncapsulation.Emulated: {\n        let /** @type {?} */ renderer = this.rendererByCompId.get(type.id);\n        if (!renderer) {\n          renderer = new EmulatedEncapsulationServerRenderer2(\n              this.document, this.ngZone, this.sharedStylesHost, this.schema, type);\n          this.rendererByCompId.set(type.id, renderer);\n        }\n        ( /** @type {?} */((<EmulatedEncapsulationServerRenderer2>renderer))).applyToHost(element);\n        return renderer;\n      }\n      case ViewEncapsulation.Native:\n        throw new Error('Native encapsulation is not supported on the server!');\n      default: {\n        if (!this.rendererByCompId.has(type.id)) {\n          const /** @type {?} */ styles = flattenStyles(type.id, type.styles, []);\n          this.sharedStylesHost.addStyles(styles);\n          this.rendererByCompId.set(type.id, this.defaultRenderer);\n        }\n        return this.defaultRenderer;\n      }\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgZone, },\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: SharedStylesHost, },\n];\n}\n\nfunction ServerRendererFactory2_tsickle_Closure_declarations() {\n/** @type {?} */\nServerRendererFactory2.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nServerRendererFactory2.ctorParameters;\n/** @type {?} */\nServerRendererFactory2.prototype.rendererByCompId;\n/** @type {?} */\nServerRendererFactory2.prototype.defaultRenderer;\n/** @type {?} */\nServerRendererFactory2.prototype.schema;\n/** @type {?} */\nServerRendererFactory2.prototype.ngZone;\n/** @type {?} */\nServerRendererFactory2.prototype.document;\n/** @type {?} */\nServerRendererFactory2.prototype.sharedStylesHost;\n}\n\nclass DefaultServerRenderer2 implements Renderer2 {\n  data: {[key: string]: any} = Object.create(null);\n/**\n * @param {?} document\n * @param {?} ngZone\n * @param {?} schema\n */\nconstructor(\nprivate document: any,\nprivate ngZone: NgZone,\nprivate schema: DomElementSchemaRegistry) {}\n/**\n * @return {?}\n */\ndestroy(): void {}\n\n  destroyNode: null;\n/**\n * @param {?} name\n * @param {?=} namespace\n * @param {?=} debugInfo\n * @return {?}\n */\ncreateElement(name: string, namespace?: string, debugInfo?: any): any {\n    if (namespace) {\n      return getDOM().createElementNS(NAMESPACE_URIS[namespace], name);\n    }\n\n    return getDOM().createElement(name);\n  }\n/**\n * @param {?} value\n * @param {?=} debugInfo\n * @return {?}\n */\ncreateComment(value: string, debugInfo?: any): any { return getDOM().createComment(value); }\n/**\n * @param {?} value\n * @param {?=} debugInfo\n * @return {?}\n */\ncreateText(value: string, debugInfo?: any): any { return getDOM().createTextNode(value); }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nappendChild(parent: any, newChild: any): void { getDOM().appendChild(parent, newChild); }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\ninsertBefore(parent: any, newChild: any, refChild: any): void {\n    if (parent) {\n      getDOM().insertBefore(parent, refChild, newChild);\n    }\n  }\n/**\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nremoveChild(parent: any, oldChild: any): void {\n    if (parent) {\n      getDOM().removeChild(parent, oldChild);\n    }\n  }\n/**\n * @param {?} selectorOrNode\n * @param {?=} debugInfo\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any, debugInfo?: any): any {\n    let /** @type {?} */ el: any;\n    if (typeof selectorOrNode === 'string') {\n      el = getDOM().querySelector(this.document, selectorOrNode);\n      if (!el) {\n        throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n      }\n    } else {\n      el = selectorOrNode;\n    }\n    getDOM().clearNodes(el);\n    return el;\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nparentNode(node: any): any { return getDOM().parentElement(node); }\n/**\n * @param {?} node\n * @return {?}\n */\nnextSibling(node: any): any { return getDOM().nextSibling(node); }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?=} namespace\n * @return {?}\n */\nsetAttribute(el: any, name: string, value: string, namespace?: string): void {\n    if (namespace) {\n      getDOM().setAttributeNS(el, NAMESPACE_URIS[namespace], namespace + ':' + name, value);\n    } else {\n      getDOM().setAttribute(el, name, value);\n    }\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nremoveAttribute(el: any, name: string, namespace?: string): void {\n    if (namespace) {\n      getDOM().removeAttributeNS(el, NAMESPACE_URIS[namespace], name);\n    } else {\n      getDOM().removeAttribute(el, name);\n    }\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\naddClass(el: any, name: string): void { getDOM().addClass(el, name); }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nremoveClass(el: any, name: string): void { getDOM().removeClass(el, name); }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?} flags\n * @return {?}\n */\nsetStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    getDOM().setStyle(el, style, value);\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} flags\n * @return {?}\n */\nremoveStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    getDOM().removeStyle(el, style);\n  }\n/**\n * @param {?} tagName\n * @param {?} propertyName\n * @return {?}\n */\nprivate _isSafeToReflectProperty(tagName: string, propertyName: string): boolean {\n    return this.schema.securityContext(tagName, propertyName, true) ===\n        this.schema.securityContext(tagName, propertyName, false);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: any, name: string, value: any): void {\n    checkNoSyntheticProp(name, 'property');\n    getDOM().setProperty(el, name, value);\n    // Mirror property values for known HTML element properties in the attributes.\n    const /** @type {?} */ tagName = ( /** @type {?} */((el.tagName as string))).toLowerCase();\n    if (value != null && (typeof value === 'number' || typeof value == 'string') &&\n        this.schema.hasElement(tagName, EMPTY_ARRAY) &&\n        this.schema.hasProperty(tagName, name, EMPTY_ARRAY) &&\n        this._isSafeToReflectProperty(tagName, name)) {\n      this.setAttribute(el, name, value.toString());\n    }\n  }\n/**\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nsetValue(node: any, value: string): void { getDOM().setText(node, value); }\n/**\n * @param {?} target\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nlisten(\n      target: 'document'|'window'|'body'|any, eventName: string,\n      callback: (event: any) => boolean): () => void {\n    // Note: We are not using the EventsPlugin here as this is not needed\n    // to run our tests.\n    checkNoSyntheticProp(eventName, 'listener');\n    const /** @type {?} */ el =\n        typeof target === 'string' ? getDOM().getGlobalEventTarget(this.document, target) : target;\n    const /** @type {?} */ outsideHandler = (event: any) => this.ngZone.runGuarded(() => callback(event));\n    return this.ngZone.runOutsideAngular(() => getDOM().onAndCancel(el, eventName, outsideHandler));\n  }\n}\n\nfunction DefaultServerRenderer2_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultServerRenderer2.prototype.data;\n/** @type {?} */\nDefaultServerRenderer2.prototype.destroyNode;\n/** @type {?} */\nDefaultServerRenderer2.prototype.document;\n/** @type {?} */\nDefaultServerRenderer2.prototype.ngZone;\n/** @type {?} */\nDefaultServerRenderer2.prototype.schema;\n}\n\n\nconst /** @type {?} */ AT_CHARCODE = '@'.charCodeAt(0);\n/**\n * @param {?} name\n * @param {?} nameKind\n * @return {?}\n */\nfunction checkNoSyntheticProp(name: string, nameKind: string) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new Error(\n        `Found the synthetic ${nameKind} ${name}. Please include either \"BrowserAnimationsModule\" or \"NoopAnimationsModule\" in your application.`);\n  }\n}\nclass EmulatedEncapsulationServerRenderer2 extends DefaultServerRenderer2 {\nprivate contentAttr: string;\nprivate hostAttr: string;\n/**\n * @param {?} document\n * @param {?} ngZone\n * @param {?} sharedStylesHost\n * @param {?} schema\n * @param {?} component\n */\nconstructor(\n      document: any, ngZone: NgZone, sharedStylesHost: SharedStylesHost,\n      schema: DomElementSchemaRegistry,\nprivate component: RendererType2) {\n    super(document, ngZone, schema);\n    const styles = flattenStyles(component.id, component.styles, []);\n    sharedStylesHost.addStyles(styles);\n\n    this.contentAttr = shimContentAttribute(component.id);\n    this.hostAttr = shimHostAttribute(component.id);\n  }\n/**\n * @param {?} element\n * @return {?}\n */\napplyToHost(element: any) { super.setAttribute(element, this.hostAttr, ''); }\n/**\n * @param {?} parent\n * @param {?} name\n * @return {?}\n */\ncreateElement(parent: any, name: string): Element {\n    const /** @type {?} */ el = super.createElement(parent, name);\n    super.setAttribute(el, this.contentAttr, '');\n    return el;\n  }\n}\n\nfunction EmulatedEncapsulationServerRenderer2_tsickle_Closure_declarations() {\n/** @type {?} */\nEmulatedEncapsulationServerRenderer2.prototype.contentAttr;\n/** @type {?} */\nEmulatedEncapsulationServerRenderer2.prototype.hostAttr;\n/** @type {?} */\nEmulatedEncapsulationServerRenderer2.prototype.component;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst parse5 = require('parse5');\n\nimport {ɵglobal as global} from '@angular/core';\nimport {ɵDomAdapter as DomAdapter, ɵsetRootDomAdapter as setRootDomAdapter, ɵsetValueOnPath as setValueOnPath} from '@angular/platform-browser';\nimport {SelectorMatcher, CssSelector} from '@angular/compiler';\n\nlet /** @type {?} */ treeAdapter: any;\n\nconst /** @type {?} */ _attrToPropMap: {[key: string]: string} = {\n  'class': 'className',\n  'innerHtml': 'innerHTML',\n  'readonly': 'readOnly',\n  'tabindex': 'tabIndex',\n};\n\nconst /** @type {?} */ mapProps = ['attribs', 'x-attribsNamespace', 'x-attribsPrefix'];\n/**\n * @param {?} methodName\n * @return {?}\n */\nfunction _notImplemented(methodName: string) {\n  return new Error('This method is not implemented in Parse5DomAdapter: ' + methodName);\n}\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nfunction _getElement(el: any, name: string) {\n  for (let /** @type {?} */ i = 0; i < el.childNodes.length; i++) {\n    let /** @type {?} */ node = el.childNodes[i];\n    if (node.name === name) {\n      return node;\n    }\n  }\n  return null;\n}\n/**\n * Parses a document string to a Document object.\n * @param {?} html\n * @return {?}\n */\nexport function parseDocument(html: string) {\n  let /** @type {?} */ doc = parse5.parse(html, {treeAdapter: parse5.treeAdapters.htmlparser2});\n  let /** @type {?} */ docElement = _getElement(doc, 'html');\n  doc['head'] = _getElement(docElement, 'head');\n  doc['body'] = _getElement(docElement, 'body');\n  doc['_window'] = {};\n  return doc;\n}\n/**\n * A `DomAdapter` powered by the `parse5` NodeJS module.\n * \n * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nexport class Parse5DomAdapter extends DomAdapter {\n/**\n * @return {?}\n */\nstatic makeCurrent() {\n    treeAdapter = parse5.treeAdapters.htmlparser2;\n    setRootDomAdapter(new Parse5DomAdapter());\n  }\n/**\n * @param {?} nodeA\n * @param {?} nodeB\n * @return {?}\n */\ncontains(nodeA: any, nodeB: any): boolean {\n    let /** @type {?} */ inner = nodeB;\n    while (inner) {\n      if (inner === nodeA) return true;\n      inner = inner.parent;\n    }\n    return false;\n  }\n/**\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\nhasProperty(element: any, name: string): boolean {\n    return _HTMLElementPropertyList.indexOf(name) > -1;\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: any, name: string, value: any) {\n    if (name === 'innerHTML') {\n      this.setInnerHTML(el, value);\n    } else if (name === 'className') {\n      el.attribs['class'] = el.className = value;\n    } else {\n      el[name] = value;\n    }\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\ngetProperty(el: any, name: string): any { return el[name]; }\n/**\n * @param {?} error\n * @return {?}\n */\nlogError(error: string) { console.error(error); }\n/**\n * @param {?} error\n * @return {?}\n */\nlog(error: string) { console.log(error); }\n/**\n * @param {?} error\n * @return {?}\n */\nlogGroup(error: string) { console.error(error); }\n/**\n * @return {?}\n */\nlogGroupEnd() {}\n/**\n * @return {?}\n */\nget attrToPropMap() { return _attrToPropMap; }\n/**\n * @param {?} el\n * @param {?} selector\n * @return {?}\n */\nquerySelector(el: any, selector: string): any {\n    return this.querySelectorAll(el, selector)[0] || null;\n  }\n/**\n * @param {?} el\n * @param {?} selector\n * @return {?}\n */\nquerySelectorAll(el: any, selector: string): any[] {\n    const /** @type {?} */ res: any[] = [];\n    const /** @type {?} */ _recursive = (result: any, node: any, selector: any, matcher: any) => {\n      const /** @type {?} */ cNodes = node.childNodes;\n      if (cNodes && cNodes.length > 0) {\n        for (let /** @type {?} */ i = 0; i < cNodes.length; i++) {\n          const /** @type {?} */ childNode = cNodes[i];\n          if (this.elementMatches(childNode, selector, matcher)) {\n            result.push(childNode);\n          }\n          _recursive(result, childNode, selector, matcher);\n        }\n      }\n    };\n    const /** @type {?} */ matcher = new SelectorMatcher();\n    matcher.addSelectables(CssSelector.parse(selector));\n    _recursive(res, el, selector, matcher);\n    return res;\n  }\n/**\n * @param {?} node\n * @param {?} selector\n * @param {?=} matcher\n * @return {?}\n */\nelementMatches(node: any, selector: string, matcher: any = null): boolean {\n    if (this.isElementNode(node) && selector === '*') {\n      return true;\n    }\n    let /** @type {?} */ result = false;\n    if (selector && selector.charAt(0) == '#') {\n      result = this.getAttribute(node, 'id') == selector.substring(1);\n    } else if (selector) {\n      if (!matcher) {\n        matcher = new SelectorMatcher();\n        matcher.addSelectables(CssSelector.parse(selector));\n      }\n\n      const /** @type {?} */ cssSelector = new CssSelector();\n      cssSelector.setElement(this.tagName(node));\n      if (node.attribs) {\n        for (const /** @type {?} */ attrName in node.attribs) {\n          cssSelector.addAttribute(attrName, node.attribs[attrName]);\n        }\n      }\n      const /** @type {?} */ classList = this.classList(node);\n      for (let /** @type {?} */ i = 0; i < classList.length; i++) {\n        cssSelector.addClassName(classList[i]);\n      }\n\n      matcher.match(cssSelector, function(selector: any, cb: any) { result = true; });\n    }\n    return result;\n  }\n/**\n * @param {?} el\n * @param {?} evt\n * @param {?} listener\n * @return {?}\n */\non(el: any, evt: any, listener: any) {\n    let /** @type {?} */ listenersMap: {[k: string]: any} = el._eventListenersMap;\n    if (!listenersMap) {\n      listenersMap = {};\n      el._eventListenersMap = listenersMap;\n    }\n    const /** @type {?} */ listeners = listenersMap[evt] || [];\n    listenersMap[evt] = [...listeners, listener];\n  }\n/**\n * @param {?} el\n * @param {?} evt\n * @param {?} listener\n * @return {?}\n */\nonAndCancel(el: any, evt: any, listener: any): Function {\n    this.on(el, evt, listener);\n    return () => { remove( /** @type {?} */((<any[]>(el._eventListenersMap[evt]))), listener); };\n  }\n/**\n * @param {?} el\n * @param {?} evt\n * @return {?}\n */\ndispatchEvent(el: any, evt: any) {\n    if (!evt.target) {\n      evt.target = el;\n    }\n    if (el._eventListenersMap) {\n      const /** @type {?} */ listeners: any = el._eventListenersMap[evt.type];\n      if (listeners) {\n        for (let /** @type {?} */ i = 0; i < listeners.length; i++) {\n          listeners[i](evt);\n        }\n      }\n    }\n    if (el.parent) {\n      this.dispatchEvent(el.parent, evt);\n    }\n    if (el._window) {\n      this.dispatchEvent(el._window, evt);\n    }\n  }\n/**\n * @param {?} eventType\n * @return {?}\n */\ncreateMouseEvent(eventType: any): Event { return this.createEvent(eventType); }\n/**\n * @param {?} eventType\n * @return {?}\n */\ncreateEvent(eventType: string): Event {\n    const /** @type {?} */ event = /** @type {?} */(( <Event>{\n      type: eventType,\n      defaultPrevented: false,\n      preventDefault: () => { ( /** @type {?} */((<any>event))).defaultPrevented = true; }\n    }));\n    return event;\n  }\n/**\n * @param {?} event\n * @return {?}\n */\npreventDefault(event: any) { event.returnValue = false; }\n/**\n * @param {?} event\n * @return {?}\n */\nisPrevented(event: any): boolean { return event.returnValue != null && !event.returnValue; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetInnerHTML(el: any): string {\n    return parse5.serialize(this.templateAwareRoot(el), {treeAdapter});\n  }\n/**\n * @param {?} el\n * @return {?}\n */\ngetTemplateContent(el: any): Node { return null; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetOuterHTML(el: any): string {\n    const /** @type {?} */ fragment = treeAdapter.createDocumentFragment();\n    this.appendChild(fragment, el);\n    return parse5.serialize(fragment, {treeAdapter});\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nnodeName(node: any): string { return node.tagName; }\n/**\n * @param {?} node\n * @return {?}\n */\nnodeValue(node: any): string { return node.nodeValue; }\n/**\n * @param {?} node\n * @return {?}\n */\ntype(node: any): string { throw _notImplemented('type'); }\n/**\n * @param {?} node\n * @return {?}\n */\ncontent(node: any): string { return node.childNodes[0]; }\n/**\n * @param {?} el\n * @return {?}\n */\nfirstChild(el: any): Node { return el.firstChild; }\n/**\n * @param {?} el\n * @return {?}\n */\nnextSibling(el: any): Node { return el.nextSibling; }\n/**\n * @param {?} el\n * @return {?}\n */\nparentElement(el: any): Node { return el.parent; }\n/**\n * @param {?} el\n * @return {?}\n */\nchildNodes(el: any): Node[] { return el.childNodes; }\n/**\n * @param {?} el\n * @return {?}\n */\nchildNodesAsList(el: any): any[] {\n    const /** @type {?} */ childNodes = el.childNodes;\n    const /** @type {?} */ res = new Array(childNodes.length);\n    for (let /** @type {?} */ i = 0; i < childNodes.length; i++) {\n      res[i] = childNodes[i];\n    }\n    return res;\n  }\n/**\n * @param {?} el\n * @return {?}\n */\nclearNodes(el: any) {\n    while (el.childNodes.length > 0) {\n      this.remove(el.childNodes[0]);\n    }\n  }\n/**\n * @param {?} el\n * @param {?} node\n * @return {?}\n */\nappendChild(el: any, node: any) {\n    this.remove(node);\n    treeAdapter.appendChild(this.templateAwareRoot(el), node);\n  }\n/**\n * @param {?} el\n * @param {?} node\n * @return {?}\n */\nremoveChild(el: any, node: any) {\n    if (el.childNodes.indexOf(node) > -1) {\n      this.remove(node);\n    }\n  }\n/**\n * @param {?} el\n * @return {?}\n */\nremove(el: any): HTMLElement {\n    const /** @type {?} */ parent = el.parent;\n    if (parent) {\n      const /** @type {?} */ index = parent.childNodes.indexOf(el);\n      parent.childNodes.splice(index, 1);\n    }\n    const /** @type {?} */ prev = el.previousSibling;\n    const /** @type {?} */ next = el.nextSibling;\n    if (prev) {\n      prev.next = next;\n    }\n    if (next) {\n      next.prev = prev;\n    }\n    el.prev = null;\n    el.next = null;\n    el.parent = null;\n    return el;\n  }\n/**\n * @param {?} parent\n * @param {?} ref\n * @param {?} newNode\n * @return {?}\n */\ninsertBefore(parent: any, ref: any, newNode: any) {\n    this.remove(newNode);\n    if (ref) {\n      treeAdapter.insertBefore(parent, newNode, ref);\n    } else {\n      this.appendChild(parent, newNode);\n    }\n  }\n/**\n * @param {?} parent\n * @param {?} ref\n * @param {?} nodes\n * @return {?}\n */\ninsertAllBefore(parent: any, ref: any, nodes: any) {\n    nodes.forEach((n: any) => this.insertBefore(parent, ref, n));\n  }\n/**\n * @param {?} parent\n * @param {?} ref\n * @param {?} node\n * @return {?}\n */\ninsertAfter(parent: any, ref: any, node: any) {\n    if (ref.nextSibling) {\n      this.insertBefore(parent, ref.nextSibling, node);\n    } else {\n      this.appendChild(parent, node);\n    }\n  }\n/**\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetInnerHTML(el: any, value: any) {\n    this.clearNodes(el);\n    const /** @type {?} */ content = parse5.parseFragment(value, {treeAdapter});\n    for (let /** @type {?} */ i = 0; i < content.childNodes.length; i++) {\n      treeAdapter.appendChild(el, content.childNodes[i]);\n    }\n  }\n/**\n * @param {?} el\n * @param {?=} isRecursive\n * @return {?}\n */\ngetText(el: any, isRecursive?: boolean): string {\n    if (this.isTextNode(el)) {\n      return el.data;\n    }\n\n    if (this.isCommentNode(el)) {\n      // In the DOM, comments within an element return an empty string for textContent\n      // However, comment node instances return the comment content for textContent getter\n      return isRecursive ? '' : el.data;\n    }\n\n    if (!el.childNodes || el.childNodes.length == 0) {\n      return '';\n    }\n\n    let /** @type {?} */ textContent = '';\n    for (let /** @type {?} */ i = 0; i < el.childNodes.length; i++) {\n      textContent += this.getText(el.childNodes[i], true);\n    }\n    return textContent;\n  }\n/**\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetText(el: any, value: string) {\n    if (this.isTextNode(el) || this.isCommentNode(el)) {\n      el.data = value;\n    } else {\n      this.clearNodes(el);\n      if (value !== '') treeAdapter.insertText(el, value);\n    }\n  }\n/**\n * @param {?} el\n * @return {?}\n */\ngetValue(el: any): string { return el.value; }\n/**\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetValue(el: any, value: string) { el.value = value; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetChecked(el: any): boolean { return el.checked; }\n/**\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetChecked(el: any, value: boolean) { el.checked = value; }\n/**\n * @param {?} text\n * @return {?}\n */\ncreateComment(text: string): Comment { return treeAdapter.createCommentNode(text); }\n/**\n * @param {?} html\n * @return {?}\n */\ncreateTemplate(html: any): HTMLElement {\n    const /** @type {?} */ template = treeAdapter.createElement('template', 'http://www.w3.org/1999/xhtml', []);\n    const /** @type {?} */ content = parse5.parseFragment(html, {treeAdapter});\n    treeAdapter.setTemplateContent(template, content);\n    return template;\n  }\n/**\n * @param {?} tagName\n * @return {?}\n */\ncreateElement(tagName: any): HTMLElement {\n    return treeAdapter.createElement(tagName, 'http://www.w3.org/1999/xhtml', []);\n  }\n/**\n * @param {?} ns\n * @param {?} tagName\n * @return {?}\n */\ncreateElementNS(ns: any, tagName: any): HTMLElement {\n    return treeAdapter.createElement(tagName, ns, []);\n  }\n/**\n * @param {?} text\n * @return {?}\n */\ncreateTextNode(text: string): Text {\n    const /** @type {?} */ t = /** @type {?} */(( <any>this.createComment(text)));\n    t.type = 'text';\n    return t;\n  }\n/**\n * @param {?} attrName\n * @param {?} attrValue\n * @return {?}\n */\ncreateScriptTag(attrName: string, attrValue: string): HTMLElement {\n    return treeAdapter.createElement(\n        'script', 'http://www.w3.org/1999/xhtml', [{name: attrName, value: attrValue}]);\n  }\n/**\n * @param {?} css\n * @return {?}\n */\ncreateStyleElement(css: string): HTMLStyleElement {\n    const /** @type {?} */ style = this.createElement('style');\n    this.setText(style, css);\n    return /** @type {?} */(( <HTMLStyleElement>style));\n  }\n/**\n * @param {?} el\n * @return {?}\n */\ncreateShadowRoot(el: any): HTMLElement {\n    el.shadowRoot = treeAdapter.createDocumentFragment();\n    el.shadowRoot.parent = el;\n    return el.shadowRoot;\n  }\n/**\n * @param {?} el\n * @return {?}\n */\ngetShadowRoot(el: any): Element { return el.shadowRoot; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetHost(el: any): string { return el.host; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetDistributedNodes(el: any): Node[] { throw _notImplemented('getDistributedNodes'); }\n/**\n * @param {?} node\n * @return {?}\n */\nclone(node: Node): Node {\n    const /** @type {?} */ _recursive = (node: any) => {\n      const /** @type {?} */ nodeClone = Object.create(Object.getPrototypeOf(node));\n      for (const /** @type {?} */ prop in node) {\n        const /** @type {?} */ desc = Object.getOwnPropertyDescriptor(node, prop);\n        if (desc && 'value' in desc && typeof desc.value !== 'object') {\n          nodeClone[prop] = node[prop];\n        }\n      }\n      nodeClone.parent = null;\n      nodeClone.prev = null;\n      nodeClone.next = null;\n      nodeClone.children = null;\n\n      mapProps.forEach(mapName => {\n        if (node[mapName] != null) {\n          nodeClone[mapName] = {};\n          for (const /** @type {?} */ prop in node[mapName]) {\n            nodeClone[mapName][prop] = node[mapName][prop];\n          }\n        }\n      });\n      const /** @type {?} */ cNodes = node.children;\n      if (cNodes) {\n        const /** @type {?} */ cNodesClone = new Array(cNodes.length);\n        for (let /** @type {?} */ i = 0; i < cNodes.length; i++) {\n          const /** @type {?} */ childNode = cNodes[i];\n          const /** @type {?} */ childNodeClone = _recursive(childNode);\n          cNodesClone[i] = childNodeClone;\n          if (i > 0) {\n            childNodeClone.prev = cNodesClone[i - 1];\n            cNodesClone[i - 1].next = childNodeClone;\n          }\n          childNodeClone.parent = nodeClone;\n        }\n        nodeClone.children = cNodesClone;\n      }\n      return nodeClone;\n    };\n    return _recursive(node);\n  }\n/**\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\ngetElementsByClassName(element: any, name: string): HTMLElement[] {\n    return this.querySelectorAll(element, '.' + name);\n  }\n/**\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\ngetElementsByTagName(element: any, name: string): HTMLElement[] {\n    return this.querySelectorAll(element, name);\n  }\n/**\n * @param {?} element\n * @return {?}\n */\nclassList(element: any): string[] {\n    let /** @type {?} */ classAttrValue: any = null;\n    const /** @type {?} */ attributes = element.attribs;\n\n    if (attributes && attributes['class'] != null) {\n      classAttrValue = attributes['class'];\n    }\n    return classAttrValue ? classAttrValue.trim().split(/\\s+/g) : [];\n  }\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\naddClass(element: any, className: string) {\n    const /** @type {?} */ classList = this.classList(element);\n    const /** @type {?} */ index = classList.indexOf(className);\n    if (index == -1) {\n      classList.push(className);\n      element.attribs['class'] = element.className = classList.join(' ');\n    }\n  }\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nremoveClass(element: any, className: string) {\n    const /** @type {?} */ classList = this.classList(element);\n    const /** @type {?} */ index = classList.indexOf(className);\n    if (index > -1) {\n      classList.splice(index, 1);\n      element.attribs['class'] = element.className = classList.join(' ');\n    }\n  }\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nhasClass(element: any, className: string): boolean {\n    return this.classList(element).indexOf(className) > -1;\n  }\n/**\n * @param {?} element\n * @param {?} styleName\n * @param {?=} styleValue\n * @return {?}\n */\nhasStyle(element: any, styleName: string, styleValue: string = null): boolean {\n    const /** @type {?} */ value = this.getStyle(element, styleName) || '';\n    return styleValue ? value == styleValue : value.length > 0;\n  }\n/**\n * \\@internal\n * @param {?} element\n * @return {?}\n */\n_readStyleAttribute(element: any) {\n    const /** @type {?} */ styleMap = {};\n    const /** @type {?} */ attributes = element.attribs;\n    if (attributes && attributes['style'] != null) {\n      const /** @type {?} */ styleAttrValue = attributes['style'];\n      const /** @type {?} */ styleList = styleAttrValue.split(/;+/g);\n      for (let /** @type {?} */ i = 0; i < styleList.length; i++) {\n        if (styleList[i].length > 0) {\n          const /** @type {?} */ style = /** @type {?} */(( styleList[i] as string));\n          const /** @type {?} */ colon = style.indexOf(':');\n          if (colon === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          ( /** @type {?} */((styleMap as any)))[style.substr(0, colon).trim()] = style.substr(colon + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n/**\n * \\@internal\n * @param {?} element\n * @param {?} styleMap\n * @return {?}\n */\n_writeStyleAttribute(element: any, styleMap: any) {\n    let /** @type {?} */ styleAttrValue = '';\n    for (const /** @type {?} */ key in styleMap) {\n      const /** @type {?} */ newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.attribs['style'] = styleAttrValue;\n  }\n/**\n * @param {?} element\n * @param {?} styleName\n * @param {?} styleValue\n * @return {?}\n */\nsetStyle(element: any, styleName: string, styleValue: string) {\n    const /** @type {?} */ styleMap = this._readStyleAttribute(element);\n    ( /** @type {?} */((styleMap as any)))[styleName] = styleValue;\n    this._writeStyleAttribute(element, styleMap);\n  }\n/**\n * @param {?} element\n * @param {?} styleName\n * @return {?}\n */\nremoveStyle(element: any, styleName: string) { this.setStyle(element, styleName, null); }\n/**\n * @param {?} element\n * @param {?} styleName\n * @return {?}\n */\ngetStyle(element: any, styleName: string): string {\n    const /** @type {?} */ styleMap = this._readStyleAttribute(element);\n    return styleMap.hasOwnProperty(styleName) ? ( /** @type {?} */((styleMap as any)))[styleName] : '';\n  }\n/**\n * @param {?} element\n * @return {?}\n */\ntagName(element: any): string { return element.tagName == 'style' ? 'STYLE' : element.tagName; }\n/**\n * @param {?} element\n * @return {?}\n */\nattributeMap(element: any): Map<string, string> {\n    const /** @type {?} */ res = new Map<string, string>();\n    const /** @type {?} */ elAttrs = treeAdapter.getAttrList(element);\n    for (let /** @type {?} */ i = 0; i < elAttrs.length; i++) {\n      const /** @type {?} */ attrib = elAttrs[i];\n      res.set(attrib.name, attrib.value);\n    }\n    return res;\n  }\n/**\n * @param {?} element\n * @param {?} attribute\n * @return {?}\n */\nhasAttribute(element: any, attribute: string): boolean {\n    return element.attribs && element.attribs[attribute] != null;\n  }\n/**\n * @param {?} element\n * @param {?} ns\n * @param {?} attribute\n * @return {?}\n */\nhasAttributeNS(element: any, ns: string, attribute: string): boolean {\n    return this.hasAttribute(element, attribute);\n  }\n/**\n * @param {?} element\n * @param {?} attribute\n * @return {?}\n */\ngetAttribute(element: any, attribute: string): string {\n    return this.hasAttribute(element, attribute) ? element.attribs[attribute] : null;\n  }\n/**\n * @param {?} element\n * @param {?} ns\n * @param {?} attribute\n * @return {?}\n */\ngetAttributeNS(element: any, ns: string, attribute: string): string {\n    return this.getAttribute(element, attribute);\n  }\n/**\n * @param {?} element\n * @param {?} attribute\n * @param {?} value\n * @return {?}\n */\nsetAttribute(element: any, attribute: string, value: string) {\n    if (attribute) {\n      element.attribs[attribute] = value;\n      if (attribute === 'class') {\n        element.className = value;\n      }\n    }\n  }\n/**\n * @param {?} element\n * @param {?} ns\n * @param {?} attribute\n * @param {?} value\n * @return {?}\n */\nsetAttributeNS(element: any, ns: string, attribute: string, value: string) {\n    this.setAttribute(element, attribute, value);\n  }\n/**\n * @param {?} element\n * @param {?} attribute\n * @return {?}\n */\nremoveAttribute(element: any, attribute: string) {\n    if (attribute) {\n      delete element.attribs[attribute];\n    }\n  }\n/**\n * @param {?} element\n * @param {?} ns\n * @param {?} name\n * @return {?}\n */\nremoveAttributeNS(element: any, ns: string, name: string) { throw 'not implemented'; }\n/**\n * @param {?} el\n * @return {?}\n */\ntemplateAwareRoot(el: any): any {\n    return this.isTemplateElement(el) ? treeAdapter.getTemplateContent(el) : el;\n  }\n/**\n * @return {?}\n */\ncreateHtmlDocument(): Document {\n    const /** @type {?} */ newDoc = treeAdapter.createDocument();\n    newDoc.title = 'fakeTitle';\n    const /** @type {?} */ head = treeAdapter.createElement('head', null, []);\n    const /** @type {?} */ body = treeAdapter.createElement('body', 'http://www.w3.org/1999/xhtml', []);\n    this.appendChild(newDoc, head);\n    this.appendChild(newDoc, body);\n    newDoc['head'] = head;\n    newDoc['body'] = body;\n    newDoc['_window'] = {};\n    return newDoc;\n  }\n/**\n * @param {?} el\n * @return {?}\n */\ngetBoundingClientRect(el: any): any { return {left: 0, top: 0, width: 0, height: 0}; }\n/**\n * @param {?} doc\n * @return {?}\n */\ngetTitle(doc: Document): string { return this.getText(this.getTitleNode(doc)) || ''; }\n/**\n * @param {?} doc\n * @param {?} newTitle\n * @return {?}\n */\nsetTitle(doc: Document, newTitle: string) {\n    this.setText(this.getTitleNode(doc), newTitle || '');\n  }\n/**\n * @param {?} el\n * @return {?}\n */\nisTemplateElement(el: any): boolean {\n    return this.isElementNode(el) && this.tagName(el) === 'template';\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nisTextNode(node: any): boolean { return treeAdapter.isTextNode(node); }\n/**\n * @param {?} node\n * @return {?}\n */\nisCommentNode(node: any): boolean { return treeAdapter.isCommentNode(node); }\n/**\n * @param {?} node\n * @return {?}\n */\nisElementNode(node: any): boolean { return node ? treeAdapter.isElementNode(node) : false; }\n/**\n * @param {?} node\n * @return {?}\n */\nhasShadowRoot(node: any): boolean { return node.shadowRoot != null; }\n/**\n * @param {?} node\n * @return {?}\n */\nisShadowRoot(node: any): boolean { return this.getShadowRoot(node) == node; }\n/**\n * @param {?} node\n * @return {?}\n */\nimportIntoDoc(node: any): any { return this.clone(node); }\n/**\n * @param {?} node\n * @return {?}\n */\nadoptNode(node: any): any { return node; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetHref(el: any): string { return this.getAttribute(el, 'href'); }\n/**\n * @param {?} el\n * @param {?} baseUrl\n * @param {?} href\n * @return {?}\n */\nresolveAndSetHref(el: any, baseUrl: string, href: string) {\n    if (href == null) {\n      el.href = baseUrl;\n    } else {\n      el.href = baseUrl + '/../' + href;\n    }\n  }\n/**\n * \\@internal\n * @param {?} parsedRules\n * @param {?=} css\n * @return {?}\n */\n_buildRules(parsedRules: any, css?: any) {\n    const /** @type {?} */ rules: any[] = [];\n    for (let /** @type {?} */ i = 0; i < parsedRules.length; i++) {\n      const /** @type {?} */ parsedRule = parsedRules[i];\n      const /** @type {?} */ rule: {[key: string]: any} = {};\n      rule['cssText'] = css;\n      rule['style'] = {content: '', cssText: ''};\n      if (parsedRule.type == 'rule') {\n        rule['type'] = 1;\n\n        rule['selectorText'] =\n            parsedRule.selectors.join(', '.replace(/\\s{2,}/g, ' ')\n                                          .replace(/\\s*~\\s*/g, ' ~ ')\n                                          .replace(/\\s*\\+\\s*/g, ' + ')\n                                          .replace(/\\s*>\\s*/g, ' > ')\n                                          .replace(/\\[(\\w+)=(\\w+)\\]/g, '[$1=\"$2\"]'));\n        if (parsedRule.declarations == null) {\n          continue;\n        }\n        for (let /** @type {?} */ j = 0; j < parsedRule.declarations.length; j++) {\n          const /** @type {?} */ declaration = parsedRule.declarations[j];\n          rule['style'] = declaration.property[declaration.value];\n          rule['style'].cssText += declaration.property + ': ' + declaration.value + ';';\n        }\n      } else if (parsedRule.type == 'media') {\n        rule['type'] = 4;\n        rule['media'] = {mediaText: parsedRule.media};\n        if (parsedRule.rules) {\n          rule['cssRules'] = this._buildRules(parsedRule.rules);\n        }\n      }\n      rules.push(rule);\n    }\n    return rules;\n  }\n/**\n * @return {?}\n */\nsupportsDOMEvents(): boolean { return false; }\n/**\n * @return {?}\n */\nsupportsNativeShadowDOM(): boolean { return false; }\n/**\n * @param {?} doc\n * @param {?} target\n * @return {?}\n */\ngetGlobalEventTarget(doc: Document, target: string): any {\n    if (target == 'window') {\n      return ( /** @type {?} */((<any>doc)))._window;\n    } else if (target == 'document') {\n      return doc;\n    } else if (target == 'body') {\n      return doc.body;\n    }\n  }\n/**\n * @param {?} doc\n * @return {?}\n */\ngetBaseHref(doc: Document): string {\n    const /** @type {?} */ base = this.querySelector(doc, 'base');\n    let /** @type {?} */ href = '';\n    if (base) {\n      href = this.getHref(base);\n    }\n    // TODO(alxhub): Need relative path logic from BrowserDomAdapter here?\n    return href == null ? null : href;\n  }\n/**\n * @return {?}\n */\nresetBaseElement(): void { throw 'not implemented'; }\n/**\n * @return {?}\n */\ngetHistory(): History { throw 'not implemented'; }\n/**\n * @return {?}\n */\ngetLocation(): Location { throw 'not implemented'; }\n/**\n * @return {?}\n */\ngetUserAgent(): string { return 'Fake user agent'; }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\ngetData(el: any, name: string): string { return this.getAttribute(el, 'data-' + name); }\n/**\n * @param {?} el\n * @return {?}\n */\ngetComputedStyle(el: any): any { throw 'not implemented'; }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetData(el: any, name: string, value: string) { this.setAttribute(el, 'data-' + name, value); }\n/**\n * @param {?} path\n * @param {?} value\n * @return {?}\n */\nsetGlobalVar(path: string, value: any) { setValueOnPath(global, path, value); }\n/**\n * @return {?}\n */\nsupportsWebAnimation(): boolean { return false; }\n/**\n * @return {?}\n */\nperformanceNow(): number { return Date.now(); }\n/**\n * @return {?}\n */\ngetAnimationPrefix(): string { return ''; }\n/**\n * @return {?}\n */\ngetTransitionEnd(): string { return 'transitionend'; }\n/**\n * @return {?}\n */\nsupportsAnimation(): boolean { return true; }\n/**\n * @param {?} el\n * @param {?} newNode\n * @param {?} oldNode\n * @return {?}\n */\nreplaceChild(el: any, newNode: any, oldNode: any) { throw new Error('not implemented'); }\n/**\n * @param {?} templateHtml\n * @return {?}\n */\nparse(templateHtml: string) { throw new Error('not implemented'); }\n/**\n * @param {?} el\n * @param {?} methodName\n * @param {?} args\n * @return {?}\n */\ninvoke(el: Element, methodName: string, args: any[]): any { throw new Error('not implemented'); }\n/**\n * @param {?} event\n * @return {?}\n */\ngetEventKey(event: any): string { throw new Error('not implemented'); }\n/**\n * @return {?}\n */\nsupportsCookies(): boolean { return false; }\n/**\n * @param {?} name\n * @return {?}\n */\ngetCookie(name: string): string { throw new Error('not implemented'); }\n/**\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetCookie(name: string, value: string) { throw new Error('not implemented'); }\n/**\n * @param {?} element\n * @param {?} keyframes\n * @param {?} options\n * @return {?}\n */\nanimate(element: any, keyframes: any[], options: any): any { throw new Error('not implemented'); }\n/**\n * @param {?} doc\n * @return {?}\n */\nprivate getTitleNode(doc: Document) {\n    let /** @type {?} */ title = this.querySelector(doc, 'title');\n\n    if (!title) {\n      title = /** @type {?} */(( <HTMLTitleElement>this.createElement('title')));\n      this.appendChild(this.querySelector(doc, 'head'), title);\n    }\n\n    return title;\n  }\n}\n\n// TODO: build a proper list, this one is all the keys of a HTMLInputElement\nconst /** @type {?} */ _HTMLElementPropertyList = [\n  'webkitEntries',\n  'incremental',\n  'webkitdirectory',\n  'selectionDirection',\n  'selectionEnd',\n  'selectionStart',\n  'labels',\n  'validationMessage',\n  'validity',\n  'willValidate',\n  'width',\n  'valueAsNumber',\n  'valueAsDate',\n  'value',\n  'useMap',\n  'defaultValue',\n  'type',\n  'step',\n  'src',\n  'size',\n  'required',\n  'readOnly',\n  'placeholder',\n  'pattern',\n  'name',\n  'multiple',\n  'min',\n  'minLength',\n  'maxLength',\n  'max',\n  'list',\n  'indeterminate',\n  'height',\n  'formTarget',\n  'formNoValidate',\n  'formMethod',\n  'formEnctype',\n  'formAction',\n  'files',\n  'form',\n  'disabled',\n  'dirName',\n  'checked',\n  'defaultChecked',\n  'autofocus',\n  'autocomplete',\n  'alt',\n  'align',\n  'accept',\n  'onautocompleteerror',\n  'onautocomplete',\n  'onwaiting',\n  'onvolumechange',\n  'ontoggle',\n  'ontimeupdate',\n  'onsuspend',\n  'onsubmit',\n  'onstalled',\n  'onshow',\n  'onselect',\n  'onseeking',\n  'onseeked',\n  'onscroll',\n  'onresize',\n  'onreset',\n  'onratechange',\n  'onprogress',\n  'onplaying',\n  'onplay',\n  'onpause',\n  'onmousewheel',\n  'onmouseup',\n  'onmouseover',\n  'onmouseout',\n  'onmousemove',\n  'onmouseleave',\n  'onmouseenter',\n  'onmousedown',\n  'onloadstart',\n  'onloadedmetadata',\n  'onloadeddata',\n  'onload',\n  'onkeyup',\n  'onkeypress',\n  'onkeydown',\n  'oninvalid',\n  'oninput',\n  'onfocus',\n  'onerror',\n  'onended',\n  'onemptied',\n  'ondurationchange',\n  'ondrop',\n  'ondragstart',\n  'ondragover',\n  'ondragleave',\n  'ondragenter',\n  'ondragend',\n  'ondrag',\n  'ondblclick',\n  'oncuechange',\n  'oncontextmenu',\n  'onclose',\n  'onclick',\n  'onchange',\n  'oncanplaythrough',\n  'oncanplay',\n  'oncancel',\n  'onblur',\n  'onabort',\n  'spellcheck',\n  'isContentEditable',\n  'contentEditable',\n  'outerText',\n  'innerText',\n  'accessKey',\n  'hidden',\n  'webkitdropzone',\n  'draggable',\n  'tabIndex',\n  'dir',\n  'translate',\n  'lang',\n  'title',\n  'childElementCount',\n  'lastElementChild',\n  'firstElementChild',\n  'children',\n  'onwebkitfullscreenerror',\n  'onwebkitfullscreenchange',\n  'nextElementSibling',\n  'previousElementSibling',\n  'onwheel',\n  'onselectstart',\n  'onsearch',\n  'onpaste',\n  'oncut',\n  'oncopy',\n  'onbeforepaste',\n  'onbeforecut',\n  'onbeforecopy',\n  'shadowRoot',\n  'dataset',\n  'classList',\n  'className',\n  'outerHTML',\n  'innerHTML',\n  'scrollHeight',\n  'scrollWidth',\n  'scrollTop',\n  'scrollLeft',\n  'clientHeight',\n  'clientWidth',\n  'clientTop',\n  'clientLeft',\n  'offsetParent',\n  'offsetHeight',\n  'offsetWidth',\n  'offsetTop',\n  'offsetLeft',\n  'localName',\n  'prefix',\n  'namespaceURI',\n  'id',\n  'style',\n  'attributes',\n  'tagName',\n  'parentElement',\n  'textContent',\n  'baseURI',\n  'ownerDocument',\n  'nextSibling',\n  'previousSibling',\n  'lastChild',\n  'firstChild',\n  'childNodes',\n  'parentNode',\n  'nodeType',\n  'nodeValue',\n  'nodeName',\n  'closure_lm_714617',\n  '__jsaction',\n];\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove<T>(list: T[], el: T): void {\n  const /** @type {?} */ index = list.indexOf(el);\n  if (index > -1) {\n    list.splice(index, 1);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {LocationChangeEvent, LocationChangeListener, PlatformLocation} from '@angular/common';\nimport {Inject, Injectable, Optional} from '@angular/core';\nimport {DOCUMENT, ɵgetDOM as getDOM} from '@angular/platform-browser';\nimport {Subject} from 'rxjs/Subject';\nimport * as url from 'url';\nimport {INITIAL_CONFIG, PlatformConfig} from './tokens';\n/**\n * @param {?} urlStr\n * @return {?}\n */\nfunction parseUrl(urlStr: string): {pathname: string, search: string, hash: string} {\n  const /** @type {?} */ parsedUrl = url.parse(urlStr);\n  return {\n    pathname: parsedUrl.pathname || '',\n    search: parsedUrl.search || '',\n    hash: parsedUrl.hash || '',\n  };\n}\n/**\n * Server-side implementation of URL state. Implements `pathname`, `search`, and `hash`\n * but not the state stack.\n */\nexport class ServerPlatformLocation implements PlatformLocation {\nprivate _path: string = '/';\nprivate _search: string = '';\nprivate _hash: string = '';\nprivate _hashUpdate = new Subject<LocationChangeEvent>();\n/**\n * @param {?} _doc\n * @param {?} _config\n */\nconstructor(\nprivate _doc: any,   _config: any) {\n    const config = _config as PlatformConfig | null;\n    if (!!config && !!config.url) {\n      const parsedUrl = parseUrl(config.url);\n      this._path = parsedUrl.pathname;\n      this._search = parsedUrl.search;\n      this._hash = parsedUrl.hash;\n    }\n  }\n/**\n * @return {?}\n */\ngetBaseHrefFromDOM(): string { return getDOM().getBaseHref(this._doc); }\n/**\n * @param {?} fn\n * @return {?}\n */\nonPopState(fn: LocationChangeListener): void {\n    // No-op: a state stack is not implemented, so\n    // no events will ever come.\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonHashChange(fn: LocationChangeListener): void { this._hashUpdate.subscribe(fn); }\n/**\n * @return {?}\n */\nget pathname(): string { return this._path; }\n/**\n * @return {?}\n */\nget search(): string { return this._search; }\n/**\n * @return {?}\n */\nget hash(): string { return this._hash; }\n/**\n * @return {?}\n */\nget url(): string { return `${this.pathname}${this.search}${this.hash}`; }\n/**\n * @param {?} value\n * @param {?} oldUrl\n * @return {?}\n */\nprivate setHash(value: string, oldUrl: string) {\n    if (this._hash === value) {\n      // Don't fire events if the hash has not changed.\n      return;\n    }\n    this._hash = value;\n    const /** @type {?} */ newUrl = this.url;\n    scheduleMicroTask(\n        () => this._hashUpdate.next( /** @type {?} */(({ type: 'hashchange', oldUrl, newUrl } as LocationChangeEvent))));\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} newUrl\n * @return {?}\n */\nreplaceState(state: any, title: string, newUrl: string): void {\n    const /** @type {?} */ oldUrl = this.url;\n    const /** @type {?} */ parsedUrl = parseUrl(newUrl);\n    this._path = parsedUrl.pathname;\n    this._search = parsedUrl.search;\n    this.setHash(parsedUrl.hash, oldUrl);\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} newUrl\n * @return {?}\n */\npushState(state: any, title: string, newUrl: string): void {\n    this.replaceState(state, title, newUrl);\n  }\n/**\n * @return {?}\n */\nforward(): void { throw new Error('Not implemented'); }\n/**\n * @return {?}\n */\nback(): void { throw new Error('Not implemented'); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [INITIAL_CONFIG, ] }, ]},\n];\n}\n\nfunction ServerPlatformLocation_tsickle_Closure_declarations() {\n/** @type {?} */\nServerPlatformLocation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nServerPlatformLocation.ctorParameters;\n/** @type {?} */\nServerPlatformLocation.prototype._path;\n/** @type {?} */\nServerPlatformLocation.prototype._search;\n/** @type {?} */\nServerPlatformLocation.prototype._hash;\n/** @type {?} */\nServerPlatformLocation.prototype._hashUpdate;\n/** @type {?} */\nServerPlatformLocation.prototype._doc;\n}\n\n/**\n * @param {?} fn\n * @return {?}\n */\nexport function scheduleMicroTask(fn: Function) {\n  Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Config object passed to initialize the platform.\n *\n * @experimental\n */\nexport interface PlatformConfig {\n  document?: string;\n  url?: string;\n}\n/**\n * The DI token for setting the initial config for the platform.\n * \n * \\@experimental\n */\nexport const INITIAL_CONFIG = new InjectionToken<PlatformConfig>('Server.INITIAL_CONFIG');\n","\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst xhr2: any = require('xhr2');\n\nimport {Injectable, Provider} from '@angular/core';\nimport {BrowserXhr, Connection, ConnectionBackend, Http, ReadyState, Request, RequestOptions, Response, XHRBackend, XSRFStrategy} from '@angular/http';\n\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\nimport {Subscription} from 'rxjs/Subscription';\nexport class ServerXhr implements BrowserXhr {\n/**\n * @return {?}\n */\nbuild(): XMLHttpRequest { return new xhr2.XMLHttpRequest(); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ServerXhr_tsickle_Closure_declarations() {\n/** @type {?} */\nServerXhr.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nServerXhr.ctorParameters;\n}\n\nexport class ServerXsrfStrategy implements XSRFStrategy {\n/**\n * @param {?} req\n * @return {?}\n */\nconfigureRequest(req: Request): void {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ServerXsrfStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nServerXsrfStrategy.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nServerXsrfStrategy.ctorParameters;\n}\n\nexport class ZoneMacroTaskConnection implements Connection {\n  response: Observable<Response>;\n  lastConnection: Connection;\n/**\n * @param {?} request\n * @param {?} backend\n */\nconstructor(public request: Request, backend: XHRBackend) {\n    this.response = new Observable((observer: Observer<Response>) => {\n      let task: Task = null;\n      let scheduled: boolean = false;\n      let sub: Subscription = null;\n      let savedResult: any = null;\n      let savedError: any = null;\n\n      const scheduleTask = (_task: Task) => {\n        task = _task;\n        scheduled = true;\n\n        this.lastConnection = backend.createConnection(request);\n        sub = (this.lastConnection.response as Observable<Response>)\n                  .subscribe(\n                      res => savedResult = res,\n                      err => {\n                        if (!scheduled) {\n                          throw new Error('invoke twice');\n                        }\n                        savedError = err;\n                        scheduled = false;\n                        task.invoke();\n                      },\n                      () => {\n                        if (!scheduled) {\n                          throw new Error('invoke twice');\n                        }\n                        scheduled = false;\n                        task.invoke();\n                      });\n      };\n\n      const cancelTask = (_task: Task) => {\n        if (!scheduled) {\n          return;\n        }\n        scheduled = false;\n        if (sub) {\n          sub.unsubscribe();\n          sub = null;\n        }\n      };\n\n      const onComplete = () => {\n        if (savedError !== null) {\n          observer.error(savedError);\n        } else {\n          observer.next(savedResult);\n          observer.complete();\n        }\n      };\n\n      // MockBackend is currently synchronous, which means that if scheduleTask is by\n      // scheduleMacroTask, the request will hit MockBackend and the response will be\n      // sent, causing task.invoke() to be called.\n      const _task = Zone.current.scheduleMacroTask(\n          'ZoneMacroTaskConnection.subscribe', onComplete, {}, () => null, cancelTask);\n      scheduleTask(_task);\n\n      return () => {\n        if (scheduled && task) {\n          task.zone.cancelTask(task);\n          scheduled = false;\n        }\n        if (sub) {\n          sub.unsubscribe();\n          sub = null;\n        }\n      };\n    });\n  }\n/**\n * @return {?}\n */\nget readyState(): ReadyState {\n    return !!this.lastConnection ? this.lastConnection.readyState : ReadyState.Unsent;\n  }\n}\n\nfunction ZoneMacroTaskConnection_tsickle_Closure_declarations() {\n/** @type {?} */\nZoneMacroTaskConnection.prototype.response;\n/** @type {?} */\nZoneMacroTaskConnection.prototype.lastConnection;\n/** @type {?} */\nZoneMacroTaskConnection.prototype.request;\n}\n\nexport class ZoneMacroTaskBackend implements ConnectionBackend {\n/**\n * @param {?} backend\n */\nconstructor(private backend: XHRBackend) {}\n/**\n * @param {?} request\n * @return {?}\n */\ncreateConnection(request: any): ZoneMacroTaskConnection {\n    return new ZoneMacroTaskConnection(request, this.backend);\n  }\n}\n\nfunction ZoneMacroTaskBackend_tsickle_Closure_declarations() {\n/** @type {?} */\nZoneMacroTaskBackend.prototype.backend;\n}\n\n/**\n * @param {?} xhrBackend\n * @param {?} options\n * @return {?}\n */\nexport function httpFactory(xhrBackend: XHRBackend, options: RequestOptions) {\n  const /** @type {?} */ macroBackend = new ZoneMacroTaskBackend(xhrBackend);\n  return new Http(macroBackend, options);\n}\n\nexport const /** @type {?} */ SERVER_HTTP_PROVIDERS: Provider[] = [\n  {provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions]},\n  {provide: BrowserXhr, useClass: ServerXhr},\n  {provide: XSRFStrategy, useClass: ServerXsrfStrategy},\n];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst parse5 = require('parse5');\n\nimport {Injectable, Inject} from '@angular/core';\nimport {DOCUMENT, ɵgetDOM as getDOM} from '@angular/platform-browser';\n/**\n * Representation of the current platform state.\n * \n * \\@experimental\n */\nexport class PlatformState {\n/**\n * @param {?} _doc\n */\nconstructor(\nprivate _doc: any) {}\n/**\n * Renders the current state of the platform to string.\n * @return {?}\n */\nrenderToString(): string { return getDOM().getInnerHTML(this._doc); }\n/**\n * Returns the current DOM state.\n * @return {?}\n */\ngetDocument(): any { return this._doc; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction PlatformState_tsickle_Closure_declarations() {\n/** @type {?} */\nPlatformState.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPlatformState.ctorParameters;\n/** @type {?} */\nPlatformState.prototype._doc;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["first","filter","toPromise","ApplicationRef","ɵTRANSITION_ID","HttpModule","BrowserModule","NgModule","PLATFORM_ID","ɵPLATFORM_SERVER_ID","ALLOW_MULTIPLE_PLATFORMS","Injector","PLATFORM_SERVER_ID","Optional","Inject","DOCUMENT","Injectable","ɵSharedStylesHost","ɵgetDOM","SharedStylesHost","shimHostAttribute","ɵNAMESPACE_URIS","getDOM","ɵflattenStyles","ViewEncapsulation","ɵDomAdapter","CssSelector","SelectorMatcher","setRootDomAdapter","Subject","Http","XHRBackend","RequestOptions","Observable"],"mappings":"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"}