{"version":3,"file":"platform-browser-animations.umd.min.js","sources":["../../../../packages/platform-browser/animations/src/animation_renderer.ts","../../../../packages/platform-browser/animations/src/providers.ts","../../../../packages/platform-browser/animations/src/module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationTriggerMetadata} from '@angular/animations';\nimport {ɵAnimationEngine as AnimationEngine} from '@angular/animations/browser';\nimport {Injectable, NgZone, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2} from '@angular/core';\nexport class AnimationRendererFactory implements RendererFactory2 {\n/**\n * @param {?} delegate\n * @param {?} _engine\n * @param {?} _zone\n */\nconstructor(\nprivate delegate: RendererFactory2,\nprivate _engine: AnimationEngine,\nprivate _zone: NgZone) {\n  }\n/**\n * @param {?} hostElement\n * @param {?} type\n * @return {?}\n */\ncreateRenderer(hostElement: any, type: RendererType2): Renderer2 {\n    let /** @type {?} */ delegate = this.delegate.createRenderer(hostElement, type);\n    if (!hostElement || !type || !type.data || !type.data['animation']) return delegate;\n\n    const /** @type {?} */ namespaceId = type.id;\n    const /** @type {?} */ animationTriggers = /** @type {?} */(( type.data['animation'] as AnimationTriggerMetadata[]));\n    animationTriggers.forEach(\n        trigger => this._engine.registerTrigger(trigger, namespaceify(namespaceId, trigger.name)));\n    return new AnimationRenderer(delegate, this._engine, this._zone, namespaceId);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: RendererFactory2, },\n{type: AnimationEngine, },\n{type: NgZone, },\n];\n}\n\nfunction AnimationRendererFactory_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationRendererFactory.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAnimationRendererFactory.ctorParameters;\n/** @type {?} */\nAnimationRendererFactory.prototype.delegate;\n/** @type {?} */\nAnimationRendererFactory.prototype._engine;\n/** @type {?} */\nAnimationRendererFactory.prototype._zone;\n}\n\nexport class AnimationRenderer implements Renderer2 {\npublic destroyNode: (node: any) => (void|any) = null;\nprivate _flushPromise: Promise<any> = null;\n/**\n * @param {?} delegate\n * @param {?} _engine\n * @param {?} _zone\n * @param {?} _namespaceId\n */\nconstructor(\npublic delegate: Renderer2,\nprivate _engine: AnimationEngine,\nprivate _zone: NgZone,\nprivate _namespaceId: string) {\n    this.destroyNode = this.delegate.destroyNode ? (n) => delegate.destroyNode(n) : null;\n  }\n/**\n * @return {?}\n */\nget data() { return this.delegate.data; }\n/**\n * @return {?}\n */\ndestroy(): void { this.delegate.destroy(); }\n/**\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\ncreateElement(name: string, namespace?: string): any {\n    return this.delegate.createElement(name, namespace);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateComment(value: string): any { return this.delegate.createComment(value); }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateText(value: string): any { return this.delegate.createText(value); }\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any): any {\n    return this.delegate.selectRootElement(selectorOrNode);\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nparentNode(node: any): any { return this.delegate.parentNode(node); }\n/**\n * @param {?} node\n * @return {?}\n */\nnextSibling(node: any): any { return this.delegate.nextSibling(node); }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?=} namespace\n * @return {?}\n */\nsetAttribute(el: any, name: string, value: string, namespace?: string): void {\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nremoveAttribute(el: any, name: string, namespace?: string): void {\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\naddClass(el: any, name: string): void { this.delegate.addClass(el, name); }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nremoveClass(el: any, name: string): void { this.delegate.removeClass(el, name); }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?} flags\n * @return {?}\n */\nsetStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    this.delegate.setStyle(el, style, value, flags);\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} flags\n * @return {?}\n */\nremoveStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    this.delegate.removeStyle(el, style, flags);\n  }\n/**\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nsetValue(node: any, value: string): void { this.delegate.setValue(node, value); }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nappendChild(parent: any, newChild: any): void {\n    this._engine.onInsert(newChild, () => this.delegate.appendChild(parent, newChild));\n    this._queueFlush();\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\ninsertBefore(parent: any, newChild: any, refChild: any): void {\n    this._engine.onInsert(newChild, () => this.delegate.insertBefore(parent, newChild, refChild));\n    this._queueFlush();\n  }\n/**\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nremoveChild(parent: any, oldChild: any): void {\n    this._engine.onRemove(oldChild, () => this.delegate.removeChild(parent, oldChild));\n    this._queueFlush();\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: any, name: string, value: any): void {\n    if (name.charAt(0) == '@') {\n      this._engine.setProperty(el, namespaceify(this._namespaceId, name.substr(1)), value);\n      this._queueFlush();\n    } else {\n      this.delegate.setProperty(el, name, value);\n    }\n  }\n/**\n * @param {?} target\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nlisten(target: 'window'|'document'|'body'|any, eventName: string, callback: (event: any) => any):\n      () => void {\n    if (eventName.charAt(0) == '@') {\n      const /** @type {?} */ element = resolveElementFromTarget(target);\n      const [name, phase] = parseTriggerCallbackName(eventName.substr(1));\n      return this._engine.listen(\n          element, namespaceify(this._namespaceId, name), phase, (event: any) => {\n            const /** @type {?} */ e = /** @type {?} */(( event as any));\n            if (e.triggerName) {\n              e.triggerName = deNamespaceify(this._namespaceId, e.triggerName);\n            }\n            this._zone.run(() => callback(event));\n          });\n    }\n    return this.delegate.listen(target, eventName, callback);\n  }\n/**\n * @return {?}\n */\nprivate _queueFlush() {\n    if (!this._flushPromise) {\n      this._zone.runOutsideAngular(() => {\n        this._flushPromise = Promise.resolve(null).then(() => {\n          this._flushPromise = null;\n          this._engine.flush();\n        });\n      });\n    }\n  }\n}\n\nfunction AnimationRenderer_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationRenderer.prototype.destroyNode;\n/** @type {?} */\nAnimationRenderer.prototype._flushPromise;\n/** @type {?} */\nAnimationRenderer.prototype.delegate;\n/** @type {?} */\nAnimationRenderer.prototype._engine;\n/** @type {?} */\nAnimationRenderer.prototype._zone;\n/** @type {?} */\nAnimationRenderer.prototype._namespaceId;\n}\n\n/**\n * @param {?} target\n * @return {?}\n */\nfunction resolveElementFromTarget(target: 'window' | 'document' | 'body' | any): any {\n  switch (target) {\n    case 'body':\n      return document.body;\n    case 'document':\n      return document;\n    case 'window':\n      return window;\n    default:\n      return target;\n  }\n}\n/**\n * @param {?} triggerName\n * @return {?}\n */\nfunction parseTriggerCallbackName(triggerName: string) {\n  const /** @type {?} */ dotIndex = triggerName.indexOf('.');\n  const /** @type {?} */ trigger = triggerName.substring(0, dotIndex);\n  const /** @type {?} */ phase = triggerName.substr(dotIndex + 1);\n  return [trigger, phase];\n}\n/**\n * @param {?} namespaceId\n * @param {?} value\n * @return {?}\n */\nfunction namespaceify(namespaceId: string, value: string): string {\n  return `${namespaceId}#${value}`;\n}\n/**\n * @param {?} namespaceId\n * @param {?} value\n * @return {?}\n */\nfunction deNamespaceify(namespaceId: string, value: string): string {\n  return value.replace(namespaceId + '#', '');\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {AnimationDriver, ɵAnimationEngine as AnimationEngine, ɵAnimationStyleNormalizer as AnimationStyleNormalizer, ɵDomAnimationEngine as DomAnimationEngine, ɵNoopAnimationDriver as NoopAnimationDriver, ɵNoopAnimationEngine as NoopAnimationEngine, ɵWebAnimationsDriver as WebAnimationsDriver, ɵWebAnimationsStyleNormalizer as WebAnimationsStyleNormalizer, ɵsupportsWebAnimations as supportsWebAnimations} from '@angular/animations/browser';\nimport {Injectable, NgZone, Provider, RendererFactory2} from '@angular/core';\nimport {ɵDomRendererFactory2 as DomRendererFactory2} from '@angular/platform-browser';\n\nimport {AnimationRendererFactory} from './animation_renderer';\nexport class InjectableAnimationEngine extends DomAnimationEngine {\n/**\n * @param {?} driver\n * @param {?} normalizer\n */\nconstructor(driver: AnimationDriver, normalizer: AnimationStyleNormalizer) {\n    super(driver, normalizer);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AnimationDriver, },\n{type: AnimationStyleNormalizer, },\n];\n}\n\nfunction InjectableAnimationEngine_tsickle_Closure_declarations() {\n/** @type {?} */\nInjectableAnimationEngine.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInjectableAnimationEngine.ctorParameters;\n}\n\n/**\n * @return {?}\n */\nexport function instantiateSupportedAnimationDriver() {\n  if (supportsWebAnimations()) {\n    return new WebAnimationsDriver();\n  }\n  return new NoopAnimationDriver();\n}\n/**\n * @return {?}\n */\nexport function instantiateDefaultStyleNormalizer() {\n  return new WebAnimationsStyleNormalizer();\n}\n/**\n * @param {?} renderer\n * @param {?} engine\n * @param {?} zone\n * @return {?}\n */\nexport function instantiateRendererFactory(\n    renderer: DomRendererFactory2, engine: AnimationEngine, zone: NgZone) {\n  return new AnimationRendererFactory(renderer, engine, zone);\n}\n\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserModule.\n */\nexport const /** @type {?} */ BROWSER_ANIMATIONS_PROVIDERS: Provider[] = [\n  {provide: AnimationDriver, useFactory: instantiateSupportedAnimationDriver},\n  {provide: AnimationStyleNormalizer, useFactory: instantiateDefaultStyleNormalizer},\n  {provide: AnimationEngine, useClass: InjectableAnimationEngine}, {\n    provide: RendererFactory2,\n    useFactory: instantiateRendererFactory,\n    deps: [DomRendererFactory2, AnimationEngine, NgZone]\n  }\n];\n\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserTestingModule.\n */\nexport const /** @type {?} */ BROWSER_NOOP_ANIMATIONS_PROVIDERS: Provider[] = [\n  {provide: AnimationEngine, useClass: NoopAnimationEngine}, {\n    provide: RendererFactory2,\n    useFactory: instantiateRendererFactory,\n    deps: [DomRendererFactory2, AnimationEngine, NgZone]\n  }\n];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {BROWSER_ANIMATIONS_PROVIDERS, BROWSER_NOOP_ANIMATIONS_PROVIDERS} from './providers';\n/**\n * \\@experimental Animation support is experimental.\n */\nexport class BrowserAnimationsModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [BrowserModule],\n  providers: BROWSER_ANIMATIONS_PROVIDERS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BrowserAnimationsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserAnimationsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserAnimationsModule.ctorParameters;\n}\n\n/**\n * \\@experimental Animation support is experimental.\n */\nexport class NoopAnimationsModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [BrowserModule],\n  providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NoopAnimationsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNoopAnimationsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNoopAnimationsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["resolveElementFromTarget","target","window","dotIndex","triggerName","indexOf","deNamespaceify","namespaceId","value","instantiateSupportedAnimationDriver","_angular_animations_browser","ɵsupportsWebAnimations","AnimationRendererFactory","renderer","engine","zone","p","b","hasOwnProperty","d","delegate","_engine","_zone","_this","this","createRenderer","hostElement","type","data","AnimationRenderer","decorators","_angular_core","Injectable","destroyNode","n","prototype","createComment","insertBefore","parent","newChild","refChild","listen","eventName","callback","charAt","element","_a","parseTriggerCallbackName","substr","name","phase","e","_namespaceId","run","event","_queueFlush","_flushPromise","flush","InjectableAnimationEngine","_super","call","driver","normalizer","__extends","AnimationDriver","ɵAnimationStyleNormalizer","provide","ɵAnimationEngine","useClass","RendererFactory2","ɵNoopAnimationEngine","deps","_angular_platformBrowser","ɵDomRendererFactory2","NgZone","BrowserAnimationsModule","providers","BROWSER_ANIMATIONS_PROVIDERS","ctorParameters","NoopAnimationsModule"],"mappings":";;;;;uqBAiSA,SAAAA,0BAAAC,QACA,OAAAA,sEAKA,KAAA,SACA,MAAAC,8EAUA,GAAAC,UAAAC,YAAAC,QAAA,gLC9RA,QAAAC,gBAAAC,YAAAC,gDA6BA,QAAAC,uCASA,MAAAC,6BAAAC,+SAoBA,MAAA,IAAAC,0BAAAC,SAAAC,OAAAC,yFD7DA,IAAA,GAAAC,KAAAC,GAAAA,EAAAC,eAAAF,KAAAG,EAAAH,GAAAC,EAAAD,6EAIAJ,yBAAA,WAMA,QAAAA,0BAAAQ,SAAAC,QAAAC,oEAkBA,oFAlBA,GAAAC,OAAAC,KAWAJ,SAAAI,KAAAJ,SAAAK,eAAAC,YAAAC,KACA,MAAAD,aAAAC,MAAAA,KAAAC,MAAAD,KAAAC,KAAA,wFARA,2IAAA,GAAAC,mBAAAT,SAAAI,KAAAH,QAAAG,KAAAF,MAAAf,cAcAK,2BAEAA,0BAAAkB,aAGAH,KAAAI,cAAAC,uTAFGR,KAqCHH,QArCAA,sGAyCAG,KAAAS,YAAAT,KAAAJ,SAAAa,YAAA,SAAAC,GAAA,MAAAd,UAAAa,YAAAC,IAAA,KAkMA,0UA3KAL,kBAAAM,UAAAC,cAAA,SAAA5B,OAAA,MAAAgB,MAAAJ,SAAAgB,cAAA5B,k1CA6FAqB,kBAAAM,UAAAE,aAAA,SAAAC,OAAAC,SAAAC,+jBAmCAX,kBAAAM,UAAAM,OAAA,SAAAxC,OAAAyC,UAAAC,UACA,GAAApB,OAAAC,IACA,IAAA,KAAAkB,UAAAE,OAAA,GAAA,CAlHA,GAmHAC,SAnHA7C,yBAAAC,QAoHA6C,GAAAC,yBAAAL,UAAAM,OAAA,IAAAC,KAAAH,GAAA,GAAAI,MAAAJ,GAAA,6HAjHAK,EAAA/C,YAAAE,eAAAiB,MAAA6B,aAAAD,EAAA/C,cAuHAmB,MAAAD,MAAA+B,IAAA,WAAA,MAAAV,UAAAW,WAGA,MAAA9B,MAAAJ,SAAAqB,OAAAxC,OAAAyC,UAAAC,WAIAd,kBAAAM,UAAAoB,YAAA,WACA,GAAAhC,OAAAC,IAEAA,MAAAgC,0IAmBAjC,MAAAF,QAAAoC,aAIA5B,qBCxQA6B,0BAAA,SAAAC,8DAIA,MAAAA,QAAAC,KAAApC,KAAAqC,OAAAC,aAAAtC,KAOA,MAPAuC,WAAAL,0BAAAC,QAOAD,2EAIAA,2BAAA5B,yGAiBAH,KAAAjB,4BAAAsD,kBACArC,KAAAjB,4BAAAuD,kRAoCAC,QAAAxD,4BAAAyD,iBAAAC,SAAAV,4BACAQ,QAAAnC,cAAAsC,oNC1EAH,QAAAxD,4BAAAyD,iBAAAC,SAAA1D,4BAAA4D,uBAEAJ,QAAAnC,cAAAsC,uDACAE,MAAAC,yBAAAC,qBAAA/D,4BAAAyD,iBAAApC,cAAA2C,UAGAC,wBAAA,gFAQAA,yBAAA7C,iGAaA8C,UAAAC,iCAIAF,wBAAAG,eAAA,WAAA,SAEA,IAAAC,sBAAA"}