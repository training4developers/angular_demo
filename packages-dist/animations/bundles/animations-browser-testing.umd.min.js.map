{"version":3,"file":"animations-browser-testing.umd.min.js","sources":["../../../../packages/animations/browser/testing/src/mock_animation_driver.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AUTO_STYLE, AnimationPlayer, NoopAnimationPlayer, ɵStyleData} from '@angular/animations';\n\nimport {AnimationDriver} from '../../src/render/animation_driver';\n\n/**\n * @experimental Animation support is experimental.\n */\nexport class MockAnimationDriver implements AnimationDriver {\n  static log: AnimationPlayer[] = [];\n\n  animate(\n      element: any, keyframes: {[key: string]: string | number}[], duration: number, delay: number,\n      easing: string, previousPlayers: any[] = []): MockAnimationPlayer {\n    const player =\n        new MockAnimationPlayer(element, keyframes, duration, delay, easing, previousPlayers);\n    MockAnimationDriver.log.push(<AnimationPlayer>player);\n    return player;\n  }\n}\n\n/**\n * @experimental Animation support is experimental.\n */\nexport class MockAnimationPlayer extends NoopAnimationPlayer {\n  private __finished = false;\n  public previousStyles: {[key: string]: string | number} = {};\n\n  constructor(\n      public element: any, public keyframes: {[key: string]: string | number}[],\n      public duration: number, public delay: number, public easing: string,\n      public previousPlayers: any[]) {\n    super();\n    previousPlayers.forEach(player => {\n      if (player instanceof MockAnimationPlayer) {\n        const styles = player._captureStyles();\n        Object.keys(styles).forEach(prop => { this.previousStyles[prop] = styles[prop]; });\n      }\n    });\n  }\n\n  finish(): void {\n    super.finish();\n    this.__finished = true;\n  }\n\n  destroy(): void {\n    super.destroy();\n    this.__finished = true;\n  }\n\n  private _captureStyles(): {[styleName: string]: string | number} {\n    const captures: ɵStyleData = {};\n\n    Object.keys(this.previousStyles).forEach(prop => {\n      captures[prop] = this.previousStyles[prop];\n    });\n\n    if (this.hasStarted()) {\n      // when assembling the captured styles, it's important that\n      // we build the keyframe styles in the following order:\n      // {other styles within keyframes, ... previousStyles }\n      this.keyframes.forEach(kf => {\n        Object.keys(kf).forEach(prop => {\n          if (prop != 'offset') {\n            captures[prop] = this.__finished ? kf[prop] : AUTO_STYLE;\n          }\n        });\n      });\n    }\n\n    return captures;\n  }\n}\n"],"names":["__extends","this","d","b","__","constructor","prototype","Object","create","MockAnimationDriver","previousPlayers","player","MockAnimationPlayer","element","keyframes","duration","delay","easing","log","push","_super","_this","call","__finished","previousStyles","forEach","styles_1","_captureStyles","keys","prop","finish","destroy","captures","hasStarted","kf"],"mappings":";;;;;igBAoBA,IAAAA,WAAAC,MAAAA,KAAAD,WAAA,SAAAE,EAAAC,GAGA,QAAAC,MAAAH,KAAAI,YAAAH,iDACAA,GAAAI,UAAA,OAAAH,EAAAI,OAAAC,OAAAL,IAAAC,GAAAE,UAAAH,EAAAG,UAAA,GAAAF,MATAK,oBAAA,2CAoBA,+GALA,SAAAC,kBAAAA,mBAAA,IAAAC,QAAA,GAAAC,qBAAAC,QAAAC,UAAAC,SAAAC,MAAAC,OAAAP,gBAQA,OAJAD,qBAAAS,IAAAC,KAAAR,QAIAA,QAHAF,sBACAA,qBAAAS,MALA,IAAAN,qBAAA,SAAAQ,QAQA,QAAAR,qBAAAC,QAAAC,UAAAC,SAAAC,MAAAC,OAAAP,iBACA,GAAAW,OAAAD,OAAAE,KAAArB,OAAAA,IAiBA,OAhBAoB,OAAAR,QAAAA,QACAQ,MAAAP,UAAAA,UACAO,MAAON,SAAPA,SACAM,MAAAL,MAAAA,MACAK,MAAAJ,OAAAA,OAEAI,MAAAX,gBAAAA,gBACAW,MAAAE,YAAA,EACAF,MAAAG,kBACAd,gBAAAe,QAAA,SAAAd,kDAEA,GAAAe,UAAAf,OAAAgB,gBACApB,QAAAqB,KAAAF,UAAAD,QAAA,SAAAI,MAAAR,MAAAG,eAAAK,MAAAH,SAAAG,WAIAR,YAzBArB,WAAAY,oBAAAQ,QA4BAR,oBAAAN,UAAAwB,OAAA,WACAV,OAAAd,UAAAwB,OAAAR,KAAArB,MACAA,KAAAsB,YAAA,GAEAX,oBAAAN,UAAAyB,QAAA,mEAIAnB,oBAAAN,UAAAqB,eAAA,WACA,GAAAN,OAAApB,KACA+B,kBACAzB,QAAAqB,KAAA3B,KAAAuB,gBAAAC,QAAA,SAAAI,MACAG,SAAAH,MAAAR,MAAAG,eAAAK,QAEA5B,KAAAgC,cAKAhC,KAAAa,UAAAW,QAAA,SAAAS"}